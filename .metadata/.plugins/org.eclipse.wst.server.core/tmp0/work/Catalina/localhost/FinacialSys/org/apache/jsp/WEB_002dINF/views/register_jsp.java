/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M22
 * Generated at: 2017-10-16 03:13:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("\t<title>用户注册</title>\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"assets/css/register.css\"/>\r\n");
      out.write("\t<link href=\"assets/img/favicon-20170803111016817.ico\" rel=\"SHORTCUT ICON\">\r\n");
      out.write("\t\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"divAll\">\r\n");
      out.write("    <div id=\"titles\">新用户注册</div>\r\n");
      out.write("    <div id=\"contents\">\r\n");
      out.write("    <h3 class=\"xinxi\">基本信息</h3>\r\n");
      out.write("    <hr width=95% color=\"#f2f2f2\"/>\r\n");
      out.write("    <form action=\"register\" id=\"register\" onSubmit=\"return checkForm()\" method=\"post\">\r\n");
      out.write("    <div id=\"form-itemGroup\">\r\n");
      out.write("        <label for=\"user_ID\">用户账号</label>\r\n");
      out.write("        <input type=\"text\" name=\"userID\" id=\"user_ID\" class=\"user_ID\" onBlur=\"checkuser_ID()\" oninput=\"checkuser_ID()\">\r\n");
      out.write("        <span class=\"default\" id=\"user_IDErr\">请输入至少3位的用户名</span>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div id=\"form-itemGroup\">\r\n");
      out.write("    \t<label for=\"user_Name\">用户姓名</label>\r\n");
      out.write("        <input type=\"text\" name=\"userName\" id=\"user_Name\" class=\"user_ID\" onBlur=\"checkuser_Name()\" oninput=\"checkuser_Name()\">\r\n");
      out.write("        <span class=\"default\" id=\"user_NameErr\">请输入至少2位的用户姓名</span>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div id=\"form-itemGroup\">\r\n");
      out.write("    \t<label for=\"user_Password\">用户密码</label>\r\n");
      out.write("        <input type=\"password\" name=\"userPassword\" id=\"user_Password\" class=\"user_ID\" onBlur=\"checkuser_Password()\" oninput=\"checkuser_Password()\">\r\n");
      out.write("        <span class=\"default\" id=\"user_PasswordErr\">请输入4到8位的用户密码</span>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div id=\"form-itemGroup\">\r\n");
      out.write("    \t<label for=\"user_Password\">确认密码</label>\r\n");
      out.write("        <input type=\"password\" id=\"user_ConfirmPassword\" class=\"user_ID\" onBlur=\"ConfirmPassword()\" oninput=\"ConfirmPassword()\">\r\n");
      out.write("        <span class=\"default\" id=\"conPasswordErr\">请再输一次密码</span>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div id=\"form-itemGroup\">\r\n");
      out.write("    \t<label for=\"user_Nickname\">用户昵称</label>\r\n");
      out.write("        <input type=\"text\" name=\"userNickname\" id=\"user_Nickname\" class=\"user_ID\" onBlur=\"checkuser_Nickname()\" oninput=\"checkuser_Nickname()\">\r\n");
      out.write("        <span class=\"default\" id=\"user_NicknameErr\">请输入用户昵称</span>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div id=\"form-itemGroup\">\r\n");
      out.write("    \t<label for=\"user_Address\">用户地址</label>\r\n");
      out.write("        <input type=\"text\" name=\"userAddress\" id=\"user_Address\" class=\"user_ID\" onBlur=\"checkuser_Address()\" oninput=\"checkuser_Address()\">\r\n");
      out.write("        <span class=\"default\" id=\"user_AddressErr\"></span>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div id=\"form-itemGroup\">\r\n");
      out.write("        <label for=\"user_Gender\">用户性别</label>\r\n");
      out.write("        <input type=\"radio\" value=\"1\" name=\"userGender\" checked=\"checked\" />男\r\n");
      out.write("        <input type=\"radio\" value=\"2\" name=\"userGender\"/>女\r\n");
      out.write("    </div>\r\n");
      out.write("    <div>\r\n");
      out.write("    \t<button id=\"myb\" form=\"register\" type=\"submit\" disabled=\"disabled\" class=\"divBtn\" onmouseover=\"date()\">注册</button>\r\n");
      out.write("    </div>\r\n");
      out.write("    </form>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \t\r\n");
      out.write("    </div>\r\n");
      out.write("\t\r\n");
      out.write("</div>\r\n");
      out.write("<script type=\"text/javascript\" src=\"assets/js/register.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
